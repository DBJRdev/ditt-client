// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering renders correctly 1`] = `
<Connect(LayoutComponent)
  loading={false}
  title="Edit user"
>
  <div
    className="actions"
  >
    <Button
      block={false}
      clickHandler={[Function]}
      disabled={false}
      icon={null}
      iconPosition="before"
      isLabelVisible={true}
      label="Delete"
      loading={false}
      priority="primary"
      size="medium"
      type="button"
      variant="danger"
    />
  </div>
  <form>
    <p
      style={
        Object {
          "color": "#a32100",
          "textAlign": "center",
        }
      }
    />
    <TextField
      changeHandler={[Function]}
      description={null}
      disabled={false}
      error={null}
      fieldId="firstName"
      isLabelVisible={true}
      label="First name"
      placeholder={null}
      required={true}
      type="text"
      value=""
    />
    <TextField
      changeHandler={[Function]}
      description={null}
      disabled={false}
      error={null}
      fieldId="lastName"
      isLabelVisible={true}
      label="Last name"
      placeholder={null}
      required={true}
      type="text"
      value=""
    />
    <SelectField
      changeHandler={[Function]}
      description={null}
      disabled={false}
      error={null}
      fieldId="supervisor"
      isLabelVisible={true}
      label="Supervisor"
      options={
        Array [
          Object {
            "label": "",
            "value": null,
          },
        ]
      }
      required={false}
      value=""
    />
    <TextField
      changeHandler={[Function]}
      description={null}
      disabled={true}
      error={null}
      fieldId="email"
      isLabelVisible={true}
      label="E-mail"
      placeholder={null}
      required={true}
      type="text"
      value=""
    />
    <TextField
      changeHandler={[Function]}
      description={null}
      disabled={false}
      error={null}
      fieldId="plainPassword"
      isLabelVisible={true}
      label="Password"
      placeholder={null}
      required={false}
      type="password"
      value=""
    />
    <CheckboxField
      changeHandler={[Function]}
      checked={false}
      description={null}
      disabled={false}
      error={null}
      fieldId="isActive"
      label="Active"
      required={true}
    />
    <TextField
      changeHandler={[Function]}
      description={null}
      disabled={false}
      error={null}
      fieldId="vacationDays"
      isLabelVisible={true}
      label="Vacation days"
      placeholder={null}
      required={false}
      type="text"
      value="0"
    />
    <h2>
      Required working hours per month
    </h2>
    <p>
      Insert as amount of hours divided by 
      ","
      , starting with January.
    </p>
    <TextField
      changeHandler={[Function]}
      description={null}
      disabled={false}
      error={null}
      fieldId="2018"
      isLabelVisible={true}
      key="2018"
      label="2018"
      placeholder={null}
      required={false}
      type="text"
      value="0,0,0,0,0,0,0,0,0,0,0,0"
    />
    <TextField
      changeHandler={[Function]}
      description={null}
      disabled={false}
      error={null}
      fieldId="2019"
      isLabelVisible={true}
      key="2019"
      label="2019"
      placeholder={null}
      required={false}
      type="text"
      value="0,0,0,0,0,0,0,0,0,0,0,0"
    />
    <TextField
      changeHandler={[Function]}
      description={null}
      disabled={false}
      error={null}
      fieldId="2020"
      isLabelVisible={true}
      key="2020"
      label="2020"
      placeholder={null}
      required={false}
      type="text"
      value="0,0,0,0,0,0,0,0,0,0,0,0"
    />
    <TextField
      changeHandler={[Function]}
      description={null}
      disabled={false}
      error={null}
      fieldId="2021"
      isLabelVisible={true}
      key="2021"
      label="2021"
      placeholder={null}
      required={false}
      type="text"
      value="0,0,0,0,0,0,0,0,0,0,0,0"
    />
    <Button
      block={false}
      clickHandler={[Function]}
      disabled={false}
      icon={null}
      iconPosition="before"
      isLabelVisible={true}
      label="Save"
      loading={false}
      priority="primary"
      size="medium"
      type="button"
      variant="default"
    />
  </form>
</Connect(LayoutComponent)>
`;
