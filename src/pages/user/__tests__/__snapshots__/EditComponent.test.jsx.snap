// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering renders correctly 1`] = `
<Connect(LayoutComponent)
  loading={false}
  title="user:title.editUser"
>
  <div
    className="actions"
  >
    <ForwardRef(withForwardedRef(WithProviderContextComponent))
      color="danger"
      feedbackIcon={null}
      label="user:action.deleteUser"
      onClick={[Function]}
    />
  </div>
  <form
    className="detailPageWrapper"
  >
    <WithProviderContextComponent>
      <WithProviderContextComponent>
        <ForwardRef(withForwardedRef(WithProviderContextComponent))
          fullWidth={true}
          id="firstName"
          label="user:element.firstName"
          onChange={[Function]}
          required={true}
          validationState={null}
          validationText={null}
          value=""
        />
      </WithProviderContextComponent>
      <WithProviderContextComponent>
        <ForwardRef(withForwardedRef(WithProviderContextComponent))
          fullWidth={true}
          id="lastName"
          label="user:element.lastName"
          onChange={[Function]}
          required={true}
          validationState={null}
          validationText={null}
          value=""
        />
      </WithProviderContextComponent>
      <WithProviderContextComponent>
        <ForwardRef(withForwardedRef(WithProviderContextComponent))
          fullWidth={true}
          id="supervisor"
          label="user:element.supervisor"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "",
                "value": null,
              },
            ]
          }
          validationState={null}
          validationText={null}
          value=""
        />
      </WithProviderContextComponent>
      <WithProviderContextComponent>
        <ForwardRef(withForwardedRef(WithProviderContextComponent))
          autoComplete="off"
          fullWidth={true}
          id="email"
          label="user:element.email"
          onChange={[Function]}
          required={true}
          validationState={null}
          validationText={null}
          value=""
        />
      </WithProviderContextComponent>
      <WithProviderContextComponent>
        <ForwardRef(withForwardedRef(WithProviderContextComponent))
          fullWidth={true}
          id="employeeId"
          label="user:element.employeeId"
          onChange={[Function]}
          required={true}
          validationState={null}
          validationText={null}
          value=""
        />
      </WithProviderContextComponent>
      <WithProviderContextComponent>
        <ForwardRef(withForwardedRef(WithProviderContextComponent))
          autoComplete="new-password"
          fullWidth={true}
          id="plainPassword"
          label="user:element.plainPassword"
          onChange={[Function]}
          required={true}
          type="password"
          validationState={null}
          value=""
        />
      </WithProviderContextComponent>
      <WithProviderContextComponent>
        <ForwardRef(withForwardedRef(WithProviderContextComponent))
          checked={false}
          id="isActive"
          label="user:element.isActive"
          onChange={[Function]}
          required={true}
          validationState={null}
          validationText={null}
        />
      </WithProviderContextComponent>
      <ContractsComponent
        contracts={Array []}
        onContractAdd={[Function]}
        onContractRemove={[Function]}
        onContractSave={[Function]}
        onContractTerminate={[Function]}
        workMonths={Array []}
      />
      <h2
        className="detailSubheader"
      >
        user:text.vacationDays
      </h2>
      <WithProviderContextComponent>
        <ForwardRef(withForwardedRef(WithProviderContextComponent))
          feedbackIcon={null}
          label="general:action.save"
          onClick={[Function]}
        />
      </WithProviderContextComponent>
    </WithProviderContextComponent>
  </form>
</Connect(LayoutComponent)>
`;
