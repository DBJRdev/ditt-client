// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering renders correctly 1`] = `
<Connect(LayoutComponent)
  loading={false}
  title="user:title.addUser"
>
  <form
    className="detailPageWrapper"
  >
    <c
      align="left"
      autoWidth={false}
    >
      <c>
        <c
          changeHandler={[Function]}
          disabled={false}
          fullWidth={true}
          helperText={null}
          id="firstName"
          inputSize={null}
          isLabelVisible={true}
          label="user:element.firstName"
          layout="vertical"
          placeholder={null}
          required={true}
          size="medium"
          type="text"
          validationState={null}
          value=""
          variant="outline"
        />
      </c>
      <c>
        <c
          changeHandler={[Function]}
          disabled={false}
          fullWidth={true}
          helperText={null}
          id="lastName"
          inputSize={null}
          isLabelVisible={true}
          label="user:element.lastName"
          layout="vertical"
          placeholder={null}
          required={true}
          size="medium"
          type="text"
          validationState={null}
          value=""
          variant="outline"
        />
      </c>
      <c>
        <c
          changeHandler={[Function]}
          disabled={false}
          fullWidth={true}
          helperText={null}
          id="supervisor"
          isLabelVisible={true}
          label="user:element.supervisor"
          layout="vertical"
          options={
            Array [
              Object {
                "label": "",
                "value": null,
              },
            ]
          }
          required={false}
          size="medium"
          validationState={null}
          value=""
          variant="outline"
        />
      </c>
      <c>
        <c
          changeHandler={[Function]}
          disabled={false}
          fullWidth={true}
          helperText={null}
          id="email"
          inputSize={null}
          isLabelVisible={true}
          label="user:element.email"
          layout="vertical"
          placeholder={null}
          required={true}
          size="medium"
          type="text"
          validationState={null}
          value=""
          variant="outline"
        />
      </c>
      <c>
        <c
          changeHandler={[Function]}
          disabled={false}
          fullWidth={true}
          helperText={null}
          id="employeeId"
          inputSize={null}
          isLabelVisible={true}
          label="user:element.employeeId"
          layout="vertical"
          placeholder={null}
          required={true}
          size="medium"
          type="text"
          validationState={null}
          value=""
          variant="outline"
        />
      </c>
      <c>
        <c
          changeHandler={[Function]}
          disabled={false}
          fullWidth={true}
          helperText={null}
          id="plainPassword"
          inputSize={null}
          isLabelVisible={true}
          label="user:element.plainPassword"
          layout="vertical"
          placeholder={null}
          required={true}
          size="medium"
          type="password"
          validationState={null}
          value=""
          variant="outline"
        />
      </c>
      <c>
        <c
          changeHandler={[Function]}
          checked={false}
          description={null}
          disabled={false}
          error={null}
          id="isActive"
          isLabelVisible={true}
          label="user:element.isActive"
          labelPosition="after"
          required={true}
          validationState={null}
        />
      </c>
      <h2
        className="detailSubheader"
      >
        user:text.vacationDays
      </h2>
      <h2
        className="detailSubheader"
      >
        user:text.averageWorkingHoursTitle
      </h2>
      <p>
        user:text.averageWorkingHoursDescription
      </p>
      <c>
        <s
          afterLabel={null}
          beforeLabel={null}
          block={false}
          clickHandler={[Function]}
          disabled={false}
          endCorner={null}
          grouped={false}
          label="general:action.save"
          labelVisibility="all"
          loadingIcon={null}
          priority="default"
          size="medium"
          startCorner={null}
          type="button"
          variant="primary"
        />
      </c>
    </c>
  </form>
</Connect(LayoutComponent)>
`;
